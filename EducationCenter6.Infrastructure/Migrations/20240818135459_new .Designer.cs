// <auto-generated />
using System;
using EducationCenter6.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EducationCenter6.Infrastructure.Migrations
{
    [DbContext(typeof(EducationCenterDbContext))]
    [Migration("20240818135459_new ")]
    partial class @new
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EducationCenter6.Infrastructure.Entities.Administrator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("JobType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<byte>("Role")
                        .HasColumnType("tinyint");

                    b.Property<int>("WorkingHours")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("EducationCenter6.Infrastructure.Entities.AdministratorSalaryDetail", b =>
                {
                    b.Property<int>("AdministratorId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("SalaryId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int?>("Position")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("AdministratorId", "SalaryId");

                    b.HasIndex("SalaryId");

                    b.ToTable("AdministratorSalaryDetails");
                });

            modelBuilder.Entity("EducationCenter6.Infrastructure.Entities.Salary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Coefficient")
                        .HasColumnType("real");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.Property<double>("UnitSalary")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("EducationCenter6.Infrastructure.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<byte>("Role")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("EducationCenter6.Infrastructure.Entities.StudentSubjectDetail", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsPreviouslyStudied")
                        .HasColumnType("bit");

                    b.Property<int?>("Position")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("StudentId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("StudentSubjectDetails");
                });

            modelBuilder.Entity("EducationCenter6.Infrastructure.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("EducationCenter6.Infrastructure.Entities.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<byte>("Role")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("EducationCenter6.Infrastructure.Entities.TeacherSalaryDetail", b =>
                {
                    b.Property<int>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("SalaryId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int?>("Position")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("TeacherId", "SalaryId");

                    b.HasIndex("SalaryId");

                    b.ToTable("TeacherSalaryDetails");
                });

            modelBuilder.Entity("EducationCenter6.Infrastructure.Entities.TeacherSubjectDetail", b =>
                {
                    b.Property<int>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsPreviouslyTaught")
                        .HasColumnType("bit");

                    b.Property<int?>("Position")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("TeacherId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("TeacherSubjectDetails");
                });

            modelBuilder.Entity("EducationCenter6.Infrastructure.Entities.AdministratorSalaryDetail", b =>
                {
                    b.HasOne("EducationCenter6.Infrastructure.Entities.Administrator", "Administrator")
                        .WithMany("AdministratorSalaryDetails")
                        .HasForeignKey("AdministratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EducationCenter6.Infrastructure.Entities.Salary", "Salary")
                        .WithMany("AdministratorSalaryDetails")
                        .HasForeignKey("SalaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administrator");

                    b.Navigation("Salary");
                });

            modelBuilder.Entity("EducationCenter6.Infrastructure.Entities.StudentSubjectDetail", b =>
                {
                    b.HasOne("EducationCenter6.Infrastructure.Entities.Student", "Student")
                        .WithMany("StudentSubjectDetails")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EducationCenter6.Infrastructure.Entities.Subject", "Subject")
                        .WithMany("StudentSubjectDetails")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("EducationCenter6.Infrastructure.Entities.TeacherSalaryDetail", b =>
                {
                    b.HasOne("EducationCenter6.Infrastructure.Entities.Salary", "Salary")
                        .WithMany("TeacherSalaryDetails")
                        .HasForeignKey("SalaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EducationCenter6.Infrastructure.Entities.Teacher", "Teacher")
                        .WithMany("TeacherSalaryDetails")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Salary");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("EducationCenter6.Infrastructure.Entities.TeacherSubjectDetail", b =>
                {
                    b.HasOne("EducationCenter6.Infrastructure.Entities.Subject", "Subject")
                        .WithMany("TeacherSubjectDetails")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EducationCenter6.Infrastructure.Entities.Teacher", "Teacher")
                        .WithMany("TeacherSubjectDetails")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("EducationCenter6.Infrastructure.Entities.Administrator", b =>
                {
                    b.Navigation("AdministratorSalaryDetails");
                });

            modelBuilder.Entity("EducationCenter6.Infrastructure.Entities.Salary", b =>
                {
                    b.Navigation("AdministratorSalaryDetails");

                    b.Navigation("TeacherSalaryDetails");
                });

            modelBuilder.Entity("EducationCenter6.Infrastructure.Entities.Student", b =>
                {
                    b.Navigation("StudentSubjectDetails");
                });

            modelBuilder.Entity("EducationCenter6.Infrastructure.Entities.Subject", b =>
                {
                    b.Navigation("StudentSubjectDetails");

                    b.Navigation("TeacherSubjectDetails");
                });

            modelBuilder.Entity("EducationCenter6.Infrastructure.Entities.Teacher", b =>
                {
                    b.Navigation("TeacherSalaryDetails");

                    b.Navigation("TeacherSubjectDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
